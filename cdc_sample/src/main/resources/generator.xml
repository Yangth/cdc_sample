<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <classPathEntry location="D:/GitRepository/cdc_sample/lib/mysql-connector-java-5.1.41.jar"/>
    <context id="my" targetRuntime="MyBatis3">

        <!--自动实现Serializable接口-->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"></plugin>

        <!-- 去除自动生成的注释 -->
        <commentGenerator>
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>


        <!-- &lt;!&ndash;数据库基本信息&ndash;&gt;
         <jdbcConnection driverClass="org.postgresql.Driver"
                         connectionURL="jdbc:postgresql://127.0.0.1:5432/forwareddb"
                         userId="postgres"
                         password="123456">
         </jdbcConnection> -->

        <!--数据库基本信息-->
        <jdbcConnection driverClass="com.mysql.jdbc.Driver"
                        connectionURL="jdbc:mysql://localhost:3306/db_passenger_report"
                        userId="root"
                        password="123456">
        </jdbcConnection>

        <javaTypeResolver>
            <!--类型解析器-->
            <!-- 默认false，把jdbc decimal 和 numeric 类型解析为integer -->
            <!-- true，把jdbc decimal 和 numeric 类型解析为java.math.bigdecimal-->
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>
        <!--生成实体类的位置以及包的名字-->
        <!--同样Mac用户：targetProject 为全路径-->
        <javaModelGenerator targetPackage="com.bottle.sample.entity" targetProject="src\main\java">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="true"/>
            <!-- 从数据库返回的值被清理前后的空格 -->
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!--生成映射文件存放位置-->
        <!--同样Mac用户：targetProject 为全路径-->
        <sqlMapGenerator targetPackage="mapper" targetProject="src/main/resources/mapper">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>

        <!--生成Dao类存放位置,mapper接口生成的位置-->
        <!--type-->
        <!--1，ANNOTATEDMAPPER：会生成使用Mapper接口+Annotation的方式创建（SQL生成在annotation中），不会生成对应的XML；-->
        <!--2，MIXEDMAPPER：使用混合配置，会生成Mapper接口，并适当添加合适的Annotation，但是XML会生成在XML中；-->
        <!--3，XMLMAPPER：会生成Mapper接口，接口完全依赖XML；-->
        <!--注意，如果context是MyBatis3Simple：只支持ANNOTATEDMAPPER和XMLMAPPER-->
        <!--同样Mac用户：targetProject 为全路径-->
        <javaClientGenerator type="ANNOTATEDMAPPER" targetPackage="com.bottle.sample.passengerReport.dao.mapper"
                             targetProject="src\main\java">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false"/>
        </javaClientGenerator>

        <!-- 配置表信息 -->
        <!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample
            是否生成 example类 -->
        <table schema="t_passenger_report" tableName="t_passenger_report_0"
               domainObjectName="TPassengerReportEntity1" enableCountByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               enableUpdateByExample="false">
        </table>
<!--        <table schema="insurance" tableName="institutions"-->
<!--               domainObjectName="Institutions" enableCountByExample="false"-->
<!--               enableDeleteByExample="false" enableSelectByExample="false"-->
<!--               enableUpdateByExample="false">-->
<!--        </table>-->
<!--        <table schema="insurance" tableName="pooling_regiopn"-->
<!--               domainObjectName="PoolingRegiopn" enableCountByExample="false"-->
<!--               enableDeleteByExample="false" enableSelectByExample="false"-->
<!--               enableUpdateByExample="false">-->
<!--        </table>-->
<!--        <table schema="insurance" tableName="medical_settlement"-->
<!--               domainObjectName="MedicalSettlement" enableCountByExample="false"-->
<!--               enableDeleteByExample="false" enableSelectByExample="false"-->
<!--               enableUpdateByExample="false">-->
<!--        </table>-->
<!--        <table schema="insurance" tableName="agency_institutions"-->
<!--               domainObjectName="AgencyInstitutions" enableCountByExample="false"-->
<!--               enableDeleteByExample="false" enableSelectByExample="false"-->
<!--               enableUpdateByExample="false">-->
<!--        </table>-->
<!--        <table schema="insurance" tableName="COVID19"-->
<!--               domainObjectName="COVID19" enableCountByExample="false"-->
<!--               enableDeleteByExample="false" enableSelectByExample="false"-->
<!--               enableUpdateByExample="false">-->
<!--        </table>-->

    </context>
</generatorConfiguration>