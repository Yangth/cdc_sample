buildscript {
    ext {
        // 定义变量
        springBootVersion = '2.0.1.RELEASE'
        springCloudVersion = 'Finchley.RELEASE'
        grpcVersion = '1.27.2' // CURRENT_GRPC_VERSION
    }
    repositories {
        maven { url 'https://maven.aliyun.com/repository/public/' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
    }
    dependencies {
        classpath "gradle.plugin.com.arenagod.gradle:mybatis-generator-plugin:1.4"
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'idea'
    id 'maven'
    id "com.arenagod.gradle.MybatisGenerator" version "1.4"
}
group 'com.bottle'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
//引入 mybatis-generator 插件
apply plugin: "com.arenagod.gradle.MybatisGenerator"
apply plugin: "maven-publish"

dependencies {

    implementation project(':protos')
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile('org.springframework.boot:spring-boot-starter')
    //compile('org.springframework.cloud:spring-cloud-starter')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
    compile 'mysql:mysql-connector-java:5.1.44'
    compile 'com.github.pagehelper:pagehelper-spring-boot-starter:1.2.3'
    compile 'tk.mybatis:mapper-spring-boot-starter:1.1.5'
    compile 'org.mybatis.spring.boot:mybatis-spring-boot-starter:1.1.1'
    compile 'com.zaxxer:HikariCP:3.2.0'
    compile 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok'
    compile 'io.grpc:grpc-netty-shaded:1.27.2'
    compile 'io.grpc:grpc-protobuf:1.27.2'
    compile 'io.grpc:grpc-stub:1.27.2'
    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.67'
    compile group: 'org.hibernate.validator', name: 'hibernate-validator', version: '6.1.2.Final'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis'
    compile group: 'org.apache.directory.studio', name: 'org.apache.commons.codec', version: '1.8'
    compile group: 'org.apache.shardingsphere', name: 'sharding-jdbc-core', version: '4.0.1'
    compile 'com.dangdang:sharding-jdbc-core:1.5.3'
    compile 'com.dangdang:sharding-jdbc-config-yaml:1.5.3'

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-jta-atomikos', version: '2.2.6.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-autoconfigure'
    compile 'com.alibaba:druid-spring-boot-starter:1.1.9'
    compile group: 'org.mybatis.generator', name: 'mybatis-generator-core', version: '1.3.2'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

}

dependencyManagement {
    imports {
        // 解决cloud零散jar的版本问题
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

repositories {
    maven { url 'https://maven.aliyun.com/repository/public/' }
    maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
}

install {
    repositories.mavenInstaller {
        pom.version =  project.version
        pom.artifactId = project.name
        pom.groupId = project.group
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = "sources"
}

publishing {
    publications {
        maven(MavenPublication) {
            artifact sourceJar // Publish the output of the sourceJar task
            artifact 'my-file-name.jar' // Publish a file created outside of the build
            artifact source: sourceJar, classifier: 'src', extension: 'zip'
            from components.java
        }
    }
    repositories {
        maven {
            //指定要上传的maven私服仓库
            url = "http://127.0.0.1:8081/nexus/content/repositories/repository/"
            //认证用户和密码
            credentials {
                username = 'admin'
                password = 'admin123'
            }
        }
    }
}

configurations {
    mybatisGenerator
}
// mybatis-generator.xml 配置路径
mybatisGenerator {
    verbose = true
    configFile = 'src/main/resources/generator.xml'
}
